name: CI/CD Pipeline

on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov  # Añadimos pytest y cobertura

      - name: Create necessary directories
        run: |
          mkdir -p tests/unit
          touch tests/__init__.py
          touch tests/unit/__init__.py

      - name: List directory structure
        run: |
          ls -R tests/

      - name: Run unit tests with unittest
        run: |
          PYTHONPATH=$PYTHONPATH:$(pwd) python -m unittest discover -s tests/unit -p "test_*.py" -v

      - name: Run tests with pytest (alternativa)
        run: |
          PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/unit/ -v --cov=./ --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to production
        env:
          ENV: production
        run: |
          echo "Desplegando en producción..."
          # Aquí agregarías tus comandos de despliegue