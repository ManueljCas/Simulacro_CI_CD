name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Hello World script
        run: python app.py

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          if [ -d "tests/unit" ]; then
            python -m unittest discover -s tests/unit
          else
            echo "Directory tests/unit does not exist or is empty."
          fi

      - name: Run regression tests
        run: |
          if [ -d "tests/regression" ]; then
            python -m unittest discover -s tests/regression
          else
            echo "Directory tests/regression does not exist or is empty."
          fi

      - name: Run performance tests
        run: |
          if [ -d "tests/performance" ]; then
            python -m unittest discover -s tests/performance
          else
            echo "Directory tests/performance does not exist or is empty."
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to production
        env:
          ENV: production
        run: |
          # Aquí se agregaría el script de despliegue específico para producción
          echo "Desplegando en producción..."
